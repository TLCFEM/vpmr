name: Wheels
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build_sdist:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true
      - name: Setup
        run: |
          cd eigen && git apply ../patch_size.patch && cd ..
      - name: Build
        run: pipx run build --sdist
      - name: Check
        run: pipx run twine check dist/*
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: pyvpmr-sdist
          path: dist/*.tar.gz
  install_sdist:
    name: Install
    runs-on: ubuntu-22.04
    needs: [ build_sdist ]
    steps:
      - name: Download
        uses: actions/download-artifact@v5
        with:
          pattern: pyvpmr-sdist
          path: dist
          merge-multiple: true
      - name: Install
        run: |
          sudo apt-get install -y g++ libtbb-dev libmpfr-dev libgmp-dev
          pip install dist/*.tar.gz
  build_wheels:
    name: Wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-24.04, macos-13, macos-14 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: true
      - name: Setup
        run: |
          cd eigen && git apply ../patch_size.patch && cd ..
      - name: CI Build Wheel macos-14
        if: matrix.os == 'macos-14'
        uses: pypa/cibuildwheel@v3.1
        env:
          MACOSX_DEPLOYMENT_TARGET: 14.0
      - name: CI Build Wheel macos-13
        if: matrix.os == 'macos-13'
        uses: pypa/cibuildwheel@v3.1
        env:
          MACOSX_DEPLOYMENT_TARGET: 13.0
      - name: CI Build Wheel linux
        if: matrix.os == 'ubuntu-24.04'
        uses: pypa/cibuildwheel@v3.1
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: pyvpmr-${{ matrix.os }}
          path: wheelhouse/*.whl
  upload_all:
    name: Upload
    needs: [ build_wheels, install_sdist ]
    runs-on: ubuntu-22.04
    if: contains(github.event.head_commit.message, '[publish]')
    steps:
      - name: Prepare
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Download
        uses: actions/download-artifact@v5
        with:
          pattern: pyvpmr*
          path: dist
          merge-multiple: true
      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI }}
